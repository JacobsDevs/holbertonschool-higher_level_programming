The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

First import ``matrix_divided`` from the ``2-matrix_divided`` module:
  >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test basic input:
  >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
  [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test missing matrix:
  >>> matrix_divided(, 3)
  Traceback (most recent call last):
  ...
  SyntaxError: invalid syntax

Test missing div:
  >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
  Traceback (most recent call last):
  ...
  TypeError: matrix_divided() missing 1 required positional argument: 'div'

Test missing all arguments:
  >>> matrix_divided()
  Traceback (most recent call last):
  ...
  TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Test list not a matrix:
  >>> matrix_divided([1, 2, 3], 5)
  Traceback (most recent call last):
  ...
  TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix contains a string:
  >>> matrix_divided([[1, "b", 3], [4, 5, 6]], 2)
  Traceback (most recent call last):
  ...
  TypeError: matrix must be a matrix (list of lists) of integers/floats

Test divide by zero:
  >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
  Traceback (most recent call last):
  ...
  ZeroDivisionError: division by zero

Test each list in matrix is same size:
  >>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 2)
  Traceback (most recent call last):
  ...
  TypeError: Each row of the matrix must have the same size

Test each list in matrix is same size:
  >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "a")
  Traceback (most recent call last):
  ...
  TypeError: div must be a number

Test dividing by infinity:
  >>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
  [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
