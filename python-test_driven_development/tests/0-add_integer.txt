The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

First import ``add_integer`` from the ``0-add_integer`` module:
  >>> add_integer = __import__('0-add_integer').add_integer

Test basic input:
  >>> add_integer(1, 2)
  3

Test no input:
  >>> add_integer()
  Traceback (most recent call last):
  ...
  TypeError: add_integer() missing 1 required positional argument: 'a'

Test with big ints:
  >>> add_integer(5000000, 5000000)
  10000000

Test default value of 2nd parameter:
  >>> add_integer(2)
  100

Test with no 1st parameter:
  >>> add_integer(, 2)
  Traceback (most recent call last):
  ...
  SyntaxError: invalid syntax

Test with a as a string:
  >>> add_integer("a", 2)
  Traceback (most recent call last):
  ...
  TypeError: a must be an integer

Test with b as a string:
  >>> add_integer(2, "b")
  Traceback (most recent call last):
  ...
  TypeError: b must be an integer

Test with floats:
  >>> add_integer(2.1, 3.6)
  5

Test with NaN:
  >>> add_integer(float("nan"), 10)

Test with Float Overflow:
  >>> add_integer(float(10**1000), 1)
  Traceback (most recent call last):
  ...
  OverflowError: int too large to convert to float
