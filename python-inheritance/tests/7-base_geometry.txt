The ``7-base_geometry`` module
======================

Using ``integer_validator``
-------------------

First import ``BaseGeometry`` from the ``7-base_geometry`` module:
  >>> bg = __import__('7-base_geometry').BaseGeometry
  >>> test = bg()
  >>> isinstance(test, bg)
  True

Test basic use:
  >>> test.integer_validator('my_int', 3)

Test use with negative int:
  >>> test.integer_validator('my_int', -3)
  Traceback (most recent call last):
  ...
  ValueError: my_int must be greater than 0

Test use with not an int:
  >>> test.integer_validator('my_int', "is cool")
  Traceback (most recent call last):
  ...
  TypeError: my_int must be an integer

Test with no name:
  >>> test.integer_validator(, 1)
  Traceback (most recent call last):
  ...
  SyntaxError: invalid syntax

Test with no value:
  >>> test.integer_validator("my_int"):
  Traceback (most recent call last):
  ...
  SyntaxError: invalid syntax

Test with no input:
  >>> test.integer_validator()
  Traceback (most recent call last):
  ...
  TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Test with 0 value:
  >>> test.integer_validator("age", 0):
  Traceback (most recent call last):
  ...
  SyntaxError: invalid syntax

Test area():
  >>> test.area()
  Traceback (most recent call last):
  ...
  Exception: area() is not implemented
